{"version":3,"sources":["library.js"],"names":["bookCounter","myLibrary","author","pages","read","Book","title","this","addBookToLibrary","Clear","addread","document","getElementById","value","addition","entries","Object","tr","i","keys","length","innerHTML","toString","console","log","span","getElementsByClassName","btn","onclick","modal","style","display","event","target"],"mappings":"aAAA,IAAIA,YAAc,EACdC,UAAY,CADhB,CACIA,MAAS,0CAETC,OAAS,aACTC,MAAU,KACVC,KAAS,QAIb,SAASC,KAAKC,EAAOJ,EAAQC,EAAOC,GAApCG,KAAAD,MAAcA,EACXC,KAAKD,OAAQA,EACbC,KAAKL,MAASA,EACdK,KAAKJ,KAAQA,EAIhB,SAASK,mBAATC,QACEA,IAIIC,EAAUC,IAAAA,KAJTA,SAAAC,eAAA,YAAAC,MACUF,SAASC,eAAe,cAAYC,MACtCF,SAAWC,eAAR,aAAAC,MACJF,SAAWC,eAAR,YAAAC,OAMb,OAJFZ,UAAIa,KAAWA,GACfb,WAGS,EAMX,SAAIc,UAEA,IADJ,IAAAA,EAAUJ,SAAUK,eAAYf,WACxBgB,EAAK,EAAAC,EAATF,OAAAG,KAAAlB,WAAAmB,OAAAF,IAAA,CACAD,IAAEA,EAAI,OACNF,GAAAA,OAAQM,UAARH,GAAAZ,MAAA,YAAAL,UAAAiB,GAAAhB,OAAAoB,WAAA,YAAArB,UAAAiB,GAAAf,MAAAmB,WAAA,YAAArB,UAAAiB,GAAAd,KAAAkB,WAAA,aACAtB,EAAAA,WAAWiB,EACdjB,eAIC,SAASS,QACLY,SAAJT,eAAA,WACDS,UAAA,GAGDE,UAAAA,QAAQC,IAAIxB,aAKZ,IAAIyB,MAAOd,SAASe,eAAAA,WADhBC,IAAMhB,SAASC,eAAe,UAG9BgB,KAAJjB,SAAce,uBAAW,SAAA,GAExBC,IAFDC,QAAA,WACEC,MAAMC,MAAMC,QAAU,SAKvBN,KAFDG,QAAA,WACEC,MAAMC,MAAMC,QAAU,QAKpBF,OAAAA,QAAYE,SAAUC,GACvBA,EAAAC,QAAAJ,QAHHA,MAAAC,MAAAC,QAAA","file":"library.min.js","sourcesContent":["let bookCounter = 0;\nlet myLibrary = [\n  {\n    \"title\": \"Harry Potter and the Philosophers Stone\",\n    \"author\": \"JK Rowling\",\n    \"pages\": 1050,\n    \"read\": \"Yes\"\n  }\n];\nfunction Book(title, author, pages, read) {\n   this.title = title\n   this.author = author\n   this.pages = pages\n   this.read = read\n  }\n\nfunction addBookToLibrary(){\n  Clear();\n  let addtitle = document.getElementById('bookName').value;\n  let addauthor = document.getElementById('bookAuthor').value;\n  let addpages = document.getElementById('bookPages').value;\n  let addread = document.getElementById('bookRead').value;\n  let addition = new Book(addtitle, addauthor, addpages, addread);\n  myLibrary.push(addition);\n  Display();\n    \n    return false;   \n  }\n\n\nfunction Display(){\n\nlet entries = document.getElementById('entries');\nfor (var i = 0; i < Object.keys(myLibrary).length; i++) {\n    var tr = \"<tr>\";\n    tr += \"<td>\" + myLibrary[i].title + \"</td>\" + \"<td>\" + myLibrary[i].author.toString() +  \"</td>\" + \"<td>\" + myLibrary[i].pages.toString() +  \"</td>\" + \"<td>\" + myLibrary[i].read.toString() +  \"</td></tr>\";\n    entries.innerHTML += tr;\n    bookCounter++;\n}\n}\n\nfunction Clear(){\n  const row = document.getElementById('entries');\n  row.innerHTML = '';\n}\n\nDisplay();\nconsole.log(bookCounter);\n\n// Display modal on click of button and close when clicking outside of modal or on x\nvar modal = document.getElementById(\"myModal\");\nvar btn = document.getElementById(\"addBtn\");\nvar span = document.getElementsByClassName(\"close\")[0];\n\nbtn.onclick = function() {\n  modal.style.display = \"block\";\n}\n\nspan.onclick = function() {\n  modal.style.display = \"none\";\n}\n\nwindow.onclick = function(event) {\n  if (event.target == modal) {\n    modal.style.display = \"none\";\n  }\n}"]}