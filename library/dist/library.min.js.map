{"version":3,"sources":["library.js"],"names":["bookCounter","myLibrary","Book","author","pages","read","_classCallCheck","this","title","addBookToLibrary","Refresh","addtitle","document","getElementById","value","addauthor","addpages","Display","localStorage","setItem","push","addition","saveFile","getItem","parse","JSON","i","Object","keys","length","tr","entries","toString","innerHTML","Clear","row","stringify","index","readBook","console","log","clearbtn","modal","getElementsByClassName","btn","style","display","onclick","event","target"],"mappings":"yHAAA,IAAIA,YAAc,EACdC,UAAY,GAEVC,KAHN,SAAAA,EAAIF,EAAJG,EAAAC,EAAAC,GAAAC,gBAAAC,KAAAL,GACID,KAAAA,MAAYO,EAKZD,KAAKJ,OAASA,EAHZD,KAIGE,MAHPA,EAAuCG,KAAAF,KAAAA,GAKtC,SAIHI,mBAEEC,UACA,IAAIC,EAAWC,SAASC,eAAe,YAAYC,MAFrDC,EAASN,SAATI,eAA2B,cAAAC,MACzBJ,EAAOE,SAAAC,eAAA,aAAAC,MACHH,EAAQC,SAAWC,eAAR,YAAAC,MACXC,EAAS,IAAGH,KAAQD,EAACE,EAAeG,EAAcF,GAMtDG,OALAhB,UAAIe,KAAWJ,GACfM,aAAWC,QAAGP,OAASC,KAAAA,UAAeZ,YACtCgB,YACAhB,MAAAA,MAAUmB,QAAKC,QASjB,SAASJ,UACPK,GAAAA,SAAWJ,aAAaK,QAAQ,QADlCtB,UAASgB,KAASO,MAAAF,UACLJ,OAAXI,SACArB,UAAYwB,QAEVxB,IADF,IAAGqB,EAAQV,SAAUC,eAAA,WACVa,EAAG,EAAZA,EAAAC,OAAAC,KAAA3B,WAAA4B,OAAAH,IAAA,CADF,IAAAI,EAEO,OACLA,GAAIC,OAAUnB,UAASC,GAAAA,MAAAA,YAAvBZ,UAAAyB,GAAAvB,OAAA6B,WAAA,YAAA/B,UAAAyB,GAAAtB,MAAA4B,WAAA,kCAAA/B,UAAAyB,GAAArB,KAAA2B,WAAA,uBAAAN,EAAA,MAAAzB,UAAAyB,GAAArB,KAAA2B,WAAA,wFAAAN,EAAA,sBAIAK,EAAQE,WAAaH,EADrBA,SAAEjB,eAAaZ,aAAaO,UAAtB,YAAiDP,EAAAA,UAG1D,SAAAS,UAKaE,SAASC,eAAe,WAJtCD,UAASC,GAIP,SAASqB,QACTC,UAAIF,GAGNrB,SAAAC,eAAA,WAIMoB,UAAY,GAChBf,aAAaC,QAAQ,OAAQM,KAAKW,UAAUnC,YAF5C,IAAMkC,WAAMvB,SAAQyB,GACpBF,UAAIF,OAAYI,EAAhB,GACAnB,aAAaC,QAAQ,QACtBD,aAAAC,QAAA,OAAAM,KAAAW,UAAAnC,YAMCS,UAJFO,WAIEP,SAAO,SAAA2B,GACA,QAAPpB,UAAOoB,GAAAhC,KALTJ,UAAAoC,GAAAhC,KAAA,KAYIa,UAAAA,GAAaC,KAAQ,MAArBD,aAAaC,QAAQ,OAAQM,KAAKW,UAAUnC,YAH1CqC,UACJrB,WASEA,UACDsB,QAAAC,IAAAxC,aAGHiB,IAAAA,MAAOL,SAAAC,eAAA,WACP0B,IAAQC,SAAIxC,eAEZ,UAGIyC,SAAW7B,SAASC,eAAe,YAFnC6B,KAAK9B,SAAW+B,uBAAgB,SAApC,GAEAC,IAAIH,QAAQ,WACZC,MAAQG,MAAGjC,QAAS+B,SAGlBD,KAAAA,QAAYI,WADdJ,MAAAG,MAAAC,QAAA,QAKEJ,OAAKK,QAAOD,SAAUE,GADxBA,EAAAC,QAAAP,QAMIA,MAAMG,MAAMC,QAAU","file":"library.min.js","sourcesContent":["let bookCounter = 0;\nlet myLibrary = [];\n\nclass Book {\n  constructor(title, author, pages, read){\n    this.title = title\n    this.author = author\n    this.pages = pages\n    this.read = read\n  }\n}\n\n\n// add new Book to array after clearing the table then generating with new data\nfunction addBookToLibrary(){\n  Refresh();\n  let addtitle = document.getElementById('bookName').value;\n  let addauthor = document.getElementById('bookAuthor').value;\n  let addpages = document.getElementById('bookPages').value;\n  let addread = document.getElementById('bookRead').value;\n  let addition = new Book(addtitle, addauthor, addpages, addread);\n  myLibrary.push(addition);\n  localStorage.setItem('Book', JSON.stringify(myLibrary));\n  Display();\n  modal.style.display = \"none\";\n    \n    return false;   \n  }\n\n// Generate a table from our array\nfunction Display(){\n  saveFile = localStorage.getItem('Book');\n  myLibrary = JSON.parse(saveFile);\n  if(saveFile === null){\n    myLibrary = [];\n  } else {\n    let entries = document.getElementById('entries');\n    for (var i = 0; i < Object.keys(myLibrary).length; i++) {\n    var tr = \"<tr>\";\n    tr += '<td>' + myLibrary[i].title + '</td>' + '<td>' + myLibrary[i].author.toString() +  '</td>' + '<td>' + myLibrary[i].pages.toString() +  '</td>' + '<td>' + '<button class=\"button ' + myLibrary[i].read.toString() + '\" onClick=\"readBook(' + i +')\">' + myLibrary[i].read.toString() + '</button>' +  '</td>' + '<td>' + '<img src=\"./img/remove.png\" class=\"removeIcon\" onClick=\"deleteBook(' + i +')\">' + '</img>' + '</td></tr>';\n    entries.innerHTML += tr;\n}\n}\ndocument.getElementById('bookCount').innerHTML = 'You have ' + i + ' books.';\n}\n\nfunction Refresh(){\n  const row = document.getElementById('entries');\n  row.innerHTML = '';\n}\n\n// Reset table by clearing HTML from it before generating with latest array\nfunction Clear(){\n  myLibrary = [];\n  const row = document.getElementById('entries');\n  row.innerHTML = '';\n  localStorage.setItem('Book', JSON.stringify(myLibrary));\n}\n\nconst deleteBook = (index) => {\n  myLibrary.splice(index, 1);\n  localStorage.getItem('Book');\n  localStorage.setItem('Book', JSON.stringify(myLibrary));\n  Refresh();\n  Display();\n};\n\n\nconst readBook = (index) => {\n  if(myLibrary[index].read === \"Yes\"){\n    myLibrary[index].read = \"No\";\n    localStorage.setItem('Book', JSON.stringify(myLibrary));\n    Refresh();\n    Display();\n  } else {\n    myLibrary[index].read = \"Yes\";\n    localStorage.setItem('Book', JSON.stringify(myLibrary));\n    Refresh();\n    Display();\n  }\n  \n}\nDisplay();\nconsole.log(bookCounter);\n\n// Display modal on click of button and close when clicking outside of modal or on x\nvar modal = document.getElementById(\"myModal\");\nvar btn = document.getElementById(\"addBtn\");\nvar clearbtn = document.getElementById(\"clearBtn\");\nvar span = document.getElementsByClassName(\"close\")[0];\n\nbtn.onclick = function() {\n  modal.style.display = \"block\";\n}\n\nspan.onclick = function() {\n  modal.style.display = \"none\";\n}\n\nwindow.onclick = function(event) {\n  if (event.target == modal) {\n    modal.style.display = \"none\";\n  }\n}"]}