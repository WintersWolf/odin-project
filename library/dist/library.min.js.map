{"version":3,"sources":["library.js"],"names":["bookCounter","myLibrary","title","author","pages","read","this","addBookToLibrary","Refresh","addpages","document","getElementById","value","Display","addread","localStorage","setItem","Book","addtitle","addauthor","saveFile","getItem","i","Object","keys","length","entries","tr","toString","innerHTML","Clear","JSON","stringify","console","log","btn","modal","span","style","display","onclick","window","event","target"],"mappings":"aAAA,IAAIA,YAAc,EACdC,UAAY,GAAhB,SAAIA,KAASC,EAAbC,EAAAC,EAAAC,GAGGC,KAAKJ,MAAQA,EADhBI,KAAAH,OAAcD,EACXI,KAAKJ,MAAQA,EACbI,KAAKH,KAALE,EAMH,SAASE,mBACPC,UADF,IAIMC,EAAWC,IAAAA,KAJRH,SAATI,eAA2B,YAAAC,MAClBF,SAAAC,eAAA,cAAAC,MACQF,SAASC,eAAe,aAAYC,MACtCF,SAAGA,eAASC,YAAeC,OAMxCC,OAJAZ,UAAIa,KAAUJ,GACdK,aAAYC,QAAOC,OAAKC,KAAUC,UAAnBlB,YACfA,WAEO,EAMT,SAASY,UAEPZ,GAFFmB,SAASP,aAASQ,QAAA,QAChBD,UAAWL,KAAAA,MAAYK,UACP,OAAhBnB,SAEEA,UAAY,QACb,IADCA,IAAAA,EAASS,SAATC,eAAA,WACKW,EAAA,EAAAA,EAAAC,OAAAC,KAAAvB,WAAAwB,OAAAH,IAAA,CACT,IAAII,EAAAA,OAGAC,GAAM,OAAS1B,UAAUqB,GAAGpB,MAAQ,YAAmBD,UAAUqB,GAAGnB,OAAOyB,WAAc,YAAmB3B,UAAUqB,GAAGlB,MAAMwB,WAAc,YAAmB3B,UAAUqB,GAAGjB,KAAKuB,WAAc,aAFpMF,EAAKG,WAAeN,EAChBvB,eAKH,SAAAQ,UACAE,SAAAC,eAAA,WAIKkB,UAAY,GACjB,SAEDC,QAEE7B,UAAY,GACAS,SAASC,eAAe,WAFtCkB,UAAgB,GACd5B,aAAYe,QAAZ,OAAAe,KAAAC,UAAA/B,YAGAc,UACDkB,QAAAC,IAAAlC,aAGDiC,IAAAA,MAAYjC,SAAAA,eAEZ,WAEImC,IAAMzB,SAASC,eAAe,UAD9ByB,SAAQ1B,SAASC,eAAe,YAChCwB,KAAMzB,SAASC,uBAAnB,SAAA,GAEAwB,IAAIE,QAAO3B,WAGT0B,MAAME,MAAMC,QAAU,SACvBF,KAFDG,QAAA,WAKEJ,MAAME,MAAMC,QAAU,QACvBE,OAFDD,QAAA,SAAAE,GAKMA,EAAMC,QAAUP,QADtBK,MAAOD,MAAPD,QAAiB","file":"library.min.js","sourcesContent":["let bookCounter = 0;\nlet myLibrary = []\n\nfunction Book(title, author, pages, read) {\n   this.title = title\n   this.author = author\n   this.pages = pages\n   this.read = read\n  }\n\n// add new Book to array after clearing the table then generating with new data\nfunction addBookToLibrary(){\n  Refresh();\n  let addtitle = document.getElementById('bookName').value;\n  let addauthor = document.getElementById('bookAuthor').value;\n  let addpages = document.getElementById('bookPages').value;\n  let addread = document.getElementById('bookRead').value;\n  let addition = new Book(addtitle, addauthor, addpages, addread);\n  myLibrary.push(addition);\n  localStorage.setItem('Book', JSON.stringify(myLibrary));\n  Display();\n    \n    return false;   \n  }\n\n// Generate a table from our array\nfunction Display(){\n  saveFile = localStorage.getItem('Book');\n  myLibrary = JSON.parse(saveFile);\n  if(saveFile === null){\n    myLibrary = [];\n  } else {\nlet entries = document.getElementById('entries');\nfor (var i = 0; i < Object.keys(myLibrary).length; i++) {\n    var tr = \"<tr>\";\n    tr += \"<td>\" + myLibrary[i].title + \"</td>\" + \"<td>\" + myLibrary[i].author.toString() +  \"</td>\" + \"<td>\" + myLibrary[i].pages.toString() +  \"</td>\" + \"<td>\" + myLibrary[i].read.toString() +  \"</td></tr>\";\n    entries.innerHTML += tr;\n    bookCounter++;\n}\n}\n}\n\nfunction Refresh(){\n  const row = document.getElementById('entries');\n  row.innerHTML = '';\n}\n\n// Reset table by clearing HTML from it before generating with latest array\nfunction Clear(){\n  myLibrary = [];\n  const row = document.getElementById('entries');\n  row.innerHTML = '';\n  localStorage.setItem('Book', JSON.stringify(myLibrary));\n}\n\nDisplay();\nconsole.log(bookCounter);\n\n// Display modal on click of button and close when clicking outside of modal or on x\nvar modal = document.getElementById(\"myModal\");\nvar btn = document.getElementById(\"addBtn\");\nvar clearbtn = document.getElementById(\"clearBtn\");\nvar span = document.getElementsByClassName(\"close\")[0];\n\nbtn.onclick = function() {\n  modal.style.display = \"block\";\n}\n\nspan.onclick = function() {\n  modal.style.display = \"none\";\n}\n\nwindow.onclick = function(event) {\n  if (event.target == modal) {\n    modal.style.display = \"none\";\n  }\n}"]}