{"version":3,"sources":["library.js"],"names":["bookCounter","myLibrary","title","author","pages","read","this","addBookToLibrary","Refresh","addpages","document","getElementById","value","modal","addread","localStorage","setItem","Book","addtitle","addauthor","display","Display","saveFile","getItem","i","Object","keys","length","entries","tr","toString","innerHTML","row","JSON","stringify","index","readBook","console","log","btn","span","style","onclick","window","event","target"],"mappings":"aAAA,IAAIA,YAAc,EACdC,UAAY,GAAhB,SAAIA,KAASC,EAAbC,EAAAC,EAAAC,GAGGC,KAAKJ,MAAQA,EADhBI,KAAAH,OAAcD,EACXI,KAAKJ,MAAQA,EACbI,KAAKH,KAALE,EAMH,SAASE,mBACPC,UADF,IAIMC,EAAWC,IAAAA,KAJRH,SAATI,eAA2B,YAAAC,MAClBF,SAAAC,eAAA,cAAAC,MACQF,SAASC,eAAe,aAAYC,MACtCF,SAAGA,eAASC,YAAeC,OAOxCC,OALAZ,UAAIa,KAAUJ,GACdK,aAAYC,QAAOC,OAAKC,KAAUC,UAAnBlB,YACfA,YACAc,MAAAA,MAAYK,QAAS,QAQvB,SAASC,UAEPpB,GAFFqB,SAASD,aAASE,QAAA,QAChBD,UAAWP,KAAAA,MAAYO,UACP,OAAhBrB,SAEEA,UAAY,QADd,IACEA,IAAAA,EAAAS,SAAAC,eAAA,WACKa,EAAA,EAAAA,EAAAC,OAAAC,KAAAzB,WAAA0B,OAAAH,IAAA,CACL,IAAII,EAAAA,OAGJC,GAAM,OAAS5B,UAAUuB,GAAGtB,MAAQ,YAAmBD,UAAUuB,GAAGrB,OAAO2B,WAAc,YAAmB7B,UAAUuB,GAAGpB,MAAM0B,WAAc,kCAA8C7B,UAAUuB,GAAGnB,KAAKyB,WAAa,uBAAyBN,EAAG,MAAQvB,UAAUuB,GAAGnB,KAAKyB,WAAa,wFAA0GN,EAAG,sBAF1YI,EAAKG,WAAeN,EAGpBG,SAAAA,eAAA,aAAAG,UAAA,YAAAP,EAAA,UAMJ,SAAShB,UAHAG,SAAAA,eAAT,WACCoB,UAAA,GAICC,SAAID,QAGN9B,UAAA,GAGcS,SAASC,eAAe,WAChCoB,UAAY,GAHlBhB,aAAAC,QAAgB,OAAAiB,KAAAC,UAAAjC,YAGd+B,IAAID,WAAY,SAAhBI,GACApB,UAAAA,OAAaC,EAAQ,GACtBD,aAAAQ,QAAA,QAKCR,aAAaC,QAAQ,OAAQiB,KAAKC,UAAUjC,YAH9CO,UACEP,WAIAoB,SAAO,SAAAc,GALT,QAAAlC,UAAAkC,GAAA9B,KAWIJ,UAAUkC,GAAO9B,KAAO,KAExBG,UAAO2B,GAAA9B,KAAA,MAJL+B,aAAWpB,QAAXoB,OAAYD,KAADD,UAAWjC,YAC1BO,UACEP,WASDoB,UAEFgB,QAbDC,IAAAtC,aAeAqC,IAAAA,MAAYrC,SAAAA,eAEZ,WAEIuC,IAAM7B,SAASC,eAAe,UAD9BE,SAAQH,SAASC,eAAe,YAChC4B,KAAM7B,SAASC,uBAAnB,SAAA,GAEA4B,IAAIC,QAAO9B,WAGTG,MAAM4B,MAAMrB,QAAU,SACvBoB,KAFDE,QAAA,WAKE7B,MAAM4B,MAAMrB,QAAU,QACvBuB,OAFDD,QAAA,SAAAE,GAKMA,EAAMC,QAAUhC,QADtB8B,MAAOD,MAAPtB,QAAiB","file":"library.min.js","sourcesContent":["let bookCounter = 0;\nlet myLibrary = [];\n\nfunction Book(title, author, pages, read) {\n   this.title = title\n   this.author = author\n   this.pages = pages\n   this.read = read\n  }\n\n// add new Book to array after clearing the table then generating with new data\nfunction addBookToLibrary(){\n  Refresh();\n  let addtitle = document.getElementById('bookName').value;\n  let addauthor = document.getElementById('bookAuthor').value;\n  let addpages = document.getElementById('bookPages').value;\n  let addread = document.getElementById('bookRead').value;\n  let addition = new Book(addtitle, addauthor, addpages, addread);\n  myLibrary.push(addition);\n  localStorage.setItem('Book', JSON.stringify(myLibrary));\n  Display();\n  modal.style.display = \"none\";\n    \n    return false;   \n  }\n\n// Generate a table from our array\nfunction Display(){\n  saveFile = localStorage.getItem('Book');\n  myLibrary = JSON.parse(saveFile);\n  if(saveFile === null){\n    myLibrary = [];\n  } else {\n    let entries = document.getElementById('entries');\n    for (var i = 0; i < Object.keys(myLibrary).length; i++) {\n    var tr = \"<tr>\";\n    tr += '<td>' + myLibrary[i].title + '</td>' + '<td>' + myLibrary[i].author.toString() +  '</td>' + '<td>' + myLibrary[i].pages.toString() +  '</td>' + '<td>' + '<button class=\"button ' + myLibrary[i].read.toString() + '\" onClick=\"readBook(' + i +')\">' + myLibrary[i].read.toString() + '</button>' +  '</td>' + '<td>' + '<img src=\"./img/remove.png\" class=\"removeIcon\" onClick=\"deleteBook(' + i +')\">' + '</img>' + '</td></tr>';\n    entries.innerHTML += tr;\n}\n}\ndocument.getElementById('bookCount').innerHTML = 'You have ' + i + ' books.';\n}\n\nfunction Refresh(){\n  const row = document.getElementById('entries');\n  row.innerHTML = '';\n}\n\n// Reset table by clearing HTML from it before generating with latest array\nfunction Clear(){\n  myLibrary = [];\n  const row = document.getElementById('entries');\n  row.innerHTML = '';\n  localStorage.setItem('Book', JSON.stringify(myLibrary));\n}\n\nconst deleteBook = (index) => {\n  myLibrary.splice(index, 1);\n  localStorage.getItem('Book');\n  localStorage.setItem('Book', JSON.stringify(myLibrary));\n  Refresh();\n  Display();\n};\n\n\nconst readBook = (index) => {\n  if(myLibrary[index].read === \"Yes\"){\n    myLibrary[index].read = \"No\";\n    localStorage.setItem('Book', JSON.stringify(myLibrary));\n    Refresh();\n    Display();\n  } else {\n    myLibrary[index].read = \"Yes\";\n    localStorage.setItem('Book', JSON.stringify(myLibrary));\n    Refresh();\n    Display();\n  }\n  \n}\nDisplay();\nconsole.log(bookCounter);\n\n// Display modal on click of button and close when clicking outside of modal or on x\nvar modal = document.getElementById(\"myModal\");\nvar btn = document.getElementById(\"addBtn\");\nvar clearbtn = document.getElementById(\"clearBtn\");\nvar span = document.getElementsByClassName(\"close\")[0];\n\nbtn.onclick = function() {\n  modal.style.display = \"block\";\n}\n\nspan.onclick = function() {\n  modal.style.display = \"none\";\n}\n\nwindow.onclick = function(event) {\n  if (event.target == modal) {\n    modal.style.display = \"none\";\n  }\n}"]}