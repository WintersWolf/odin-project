{"version":3,"sources":["game.js"],"names":["gameBoard","board","tiles","Array","from","document","querySelectorAll","players","turn","p1Wins","p2Wins","p1Total","p2Total","tie","displayTurn","querySelector","gameLogic","playing","winCons","canDo","tile","innerText","makeMove","index","classList","add","refresh","checkWin","endTurn","remove","endGame","i","winCondition","a","b","c","state","includes","status","type","innerHTML","getElementById","resetButton","resetBoard","forEach","listener","addEventListener","modal","btn","span","getElementsByClassName","accept","onclick","setplayerone","value","setplayertwo","style","display","window","event","target","aiController","aiTurn","playboard","bestSpot","minimax","console","log","newBoard","player","availSpots","emptyIndexies","winning","score","length","moves","move","result","push","bestMove","bestScore","filter","s"],"mappings":"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","sourcesContent":["const gameBoard = {\n  board: ['', '', '', '', '', '', '', '', ''],\n  tiles: Array.from(document.querySelectorAll('.tile')),\n}\n\nconst players = {\n  turn: 'X',\n  p1Wins: 'p1Wins',\n  p2Wins: 'p2Wins',\n  p1Total: 0,\n  p2Total: 0,\n  tie: 'tie',\n  displayTurn: document.querySelector('.display-player')\n}\n\nconst gameLogic = {\n  playing: true,\n  winCons: [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ],\n  canDo: function(tile) {\n    if (tile.innerText === 'X' || tile.innerText === 'O'){\n        return false;\n    }\n\n    return true;\n  },\n  makeMove: function(tile, index) {\n    if(gameLogic.canDo(tile) && gameLogic.playing) {\n        tile.innerText = players.turn;\n        tile.classList.add(`player${players.turn}`);\n        gameLogic.refresh(index);\n        gameLogic.checkWin();\n        gameLogic.endTurn();\n        //aiController.aiTurn();\n    }\n  },\n  endTurn: function() {\n    players.displayTurn.classList.remove(`player${players.turn}`);\n    players.turn = players.turn === 'X' ? 'O' : 'X';\n    players.displayTurn.innerText = players.turn;\n    players.displayTurn.classList.add(`player${players.turn}`);\n  },\n  checkWin: function() {\n    let endGame = false;\n    for (let i = 0; i <= 7; i++) {\n        const winCondition = gameLogic.winCons[i];\n        const a = gameBoard.board[winCondition[0]];\n        const b = gameBoard.board[winCondition[1]];\n        const c = gameBoard.board[winCondition[2]];\n        if (a === '' || b === '' || c === '') {\n            continue;\n        }\n        if (a === b && b === c) {\n            endGame = true;\n            break;\n        }\n    }\n\n    if (endGame) {\n            gameLogic.state(players.turn === 'X' ? players.p1Wins : players.p2Wins);\n            gameLogic.playing = false;\n            return;\n        }\n\n    if (!gameBoard.board.includes(''))\n        gameLogic.state(players.tie);\n    },\n  status: document.querySelector('.status'),\n  state: function(type) {\n    switch(type){\n        case players.p1Wins:\n            gameLogic.status.innerHTML = 'Player <span class=\"player1\">1</span> Wins';\n            players.p1Total++;\n            document.getElementById(\"pone-score\").innerHTML = players.p1Total;\n            break;\n        case players.p2Wins:\n          gameLogic.status.innerHTML = 'Player <span class=\"player2\">2</span> Wins';\n          players.p2Total++;\n          document.getElementById(\"ptwo-score\").innerHTML = players.p2Total;\n            break;\n        case players.tie:\n          gameLogic.status.innerText = 'tie';\n    }\n    gameLogic.status.classList.remove('hide');\n  },\n  refresh: function(index) {\n    gameBoard.board[index] = players.turn;\n  },\n  resetButton: document.querySelector('#reset'),\n  resetBoard: function () {\n    gameBoard.board = ['', '', '', '', '', '', '', '', ''];\n      gameLogic.playing = true;\n      gameLogic.status.classList.add('hide');\n\n      if (players.turn === 'O') {\n          gameLogic.endTurn();\n      }\n\n      gameBoard.tiles.forEach(tile => {\n          tile.innerText = '';\n          tile.classList.remove('player1');\n          tile.classList.remove('player2');\n      });\n  }\n}\n\nconst listener = (() => {\n  gameBoard.tiles.forEach( (tile, index) => {\n    tile.addEventListener('click', () => gameLogic.makeMove(tile, index));\n  })\n  gameLogic.resetButton.addEventListener('click', gameLogic.resetBoard);\n\n    let modal = document.getElementById(\"info-players\");\n    let btn = document.getElementById(\"set-players\");\n    let span = document.getElementsByClassName(\"close\")[0];\n    let accept = document.getElementById(\"accept\");\n\n    accept.onclick = function() {\n      let setplayerone = document.getElementById('pone').value;\n      let setplayertwo = document.getElementById('ptwo').value;\n      \n      document.getElementById('pone-text').innerHTML = setplayerone;\n      document.getElementById('ptwo-text').innerHTML = setplayertwo;\n      \n      modal.style.display = \"none\";\n      \n      return false;\n    }\n  \n    btn.onclick = function() {\n      modal.style.display = \"block\";\n    }\n  \n    span.onclick = function() {\n      modal.style.display = \"none\";\n    }\n  \n    window.onclick = function(event) {\n      if (event.target == modal) {\n        modal.style.display = \"none\";\n      }\n    }\n})();\n\nconst aiController = {\n  aiTurn: function() {\n      let playboard = gameBoard.board;\n      // finding the ultimate play on the game that favors the computer\n      let bestSpot = minimax(playboard, \"O\");\n      //loging the results\n      console.log(\"index: \" + bestSpot.index);\n      function minimax(newBoard, player){\n        let availSpots = emptyIndexies(newBoard);\n        if (winning(newBoard, \"X\")){\n          return {score:10};\n        } else if (winning(newBoard, \"O\")){\n          return {score: 10};\n        } else if (availSpots.length === 0){\n          return{score:0};\n        }\n      \n      let moves = [];\n      for(var i=0; i < availSpots.length; i++) {\n        let move = {};\n        move.index = newBoard[availSpots[i]];\n\n        newBoard[availSpots[i]] = player;\n\n        if (player == \"O\"){\n          let result = minimax(newBoard, \"X\");\n          move.score = result.score;\n        } else {\n          let result = minimax(newBoard, \"O\");\n          move.score = result.score;\n        }\n      \n      newBoard[availSpots[i]] = move.index;\n\n      moves.push(move);\n      }\n\n      let bestMove;\n      if(player === \"O\"){\n        let bestScore = -10000;\n        for(var i = 0; i < moves.length; i++){\n          if(moves[i].score < bestScore){\n            bestScore = moves[i].score;\n            bestMove = i;\n          }\n        }\n      } else {\n        let bestScore = 10000;\n        for(var i = 0; i < moves.length; i++){\n          if(moves[i].score < bestScore){\n            bestScore = moves[i].score;\n            bestMove = i;\n          }\n        }\n      }\n      \n      return moves[bestMove];\n\n      }\n\n      function emptyIndexies(playboard){\n        \n        return  playboard.filter(s => s != \"O\" && s != \"X\");\n      }\n\n      function winning(board, player){\n if (\n        (board[0] == player && board[1] == player && board[2] == player) ||\n        (board[3] == player && board[4] == player && board[5] == player) ||\n        (board[6] == player && board[7] == player && board[8] == player) ||\n        (board[0] == player && board[3] == player && board[6] == player) ||\n        (board[1] == player && board[4] == player && board[7] == player) ||\n        (board[2] == player && board[5] == player && board[8] == player) ||\n        (board[0] == player && board[4] == player && board[8] == player) ||\n        (board[2] == player && board[4] == player && board[6] == player)\n        ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n      gameLogic.endTurn();\n  }\n}"],"file":"game.dev.js"}