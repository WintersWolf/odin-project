{"version":3,"sources":["game.js"],"names":["gameBoard","board","tiles","Array","from","document","querySelectorAll","players","turn","p1Wins","p2Wins","tie","displayTurn","querySelector","gameLogic","playing","winCons","canDo","tile","innerText","makeMove","index","classList","add","refresh","checkWin","endTurn","remove","endGame","i","winCondition","a","b","c","state","includes","status","type","innerHTML","resetButton","resetBoard","forEach","listener","addEventListener"],"mappings":"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","sourcesContent":["const gameBoard = {\n  board: ['', '', '', '', '', '', '', '', ''],\n  tiles: Array.from(document.querySelectorAll('.tile')),\n}\n\nconst players = {\n  turn: 'X',\n  p1Wins: 'p1Wins',\n  p2Wins: 'p2Wins',\n  tie: 'tie',\n  displayTurn: document.querySelector('.display-player'),\n}\n\nconst gameLogic = {\n  playing: true,\n  winCons: [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ],\n  canDo: function(tile) {\n    if (tile.innerText === 'X' || tile.innerText === 'O'){\n        return false;\n    }\n\n    return true;\n  },\n  makeMove: function(tile, index) {\n    if(gameLogic.canDo(tile) && gameLogic.playing) {\n        tile.innerText = players.turn;\n        tile.classList.add(`player${players.turn}`);\n        gameLogic.refresh(index);\n        gameLogic.checkWin();\n        gameLogic.endTurn();\n    }\n  },\n  endTurn: function() {\n    players.displayTurn.classList.remove(`player${players.turn}`);\n    players.turn = players.turn === 'X' ? 'O' : 'X';\n    players.displayTurn.innerText = players.turn;\n    players.displayTurn.classList.add(`player${players.turn}`);\n  },\n  checkWin: function() {\n    let endGame = false;\n    for (let i = 0; i <= 7; i++) {\n        const winCondition = gameLogic.winCons[i];\n        const a = gameBoard.board[winCondition[0]];\n        const b = gameBoard.board[winCondition[1]];\n        const c = gameBoard.board[winCondition[2]];\n        if (a === '' || b === '' || c === '') {\n            continue;\n        }\n        if (a === b && b === c) {\n            endGame = true;\n            break;\n        }\n    }\n\n    if (endGame) {\n            gameLogic.state(players.turn === 'X' ? players.p1Wins : players.p2Wins);\n            gameLogic.playing = false;\n            return;\n        }\n\n    if (!gameBoard.board.includes(''))\n        gameLogic.state(players.tie);\n    },\n  status: document.querySelector('.status'),\n  state: function(type) {\n    switch(type){\n        case players.p1Wins:\n            gameLogic.status.innerHTML = 'Player <span class=\"player1\">1</span> Wins';\n            break;\n        case players.p2Wins:\n          gameLogic.status.innerHTML = 'Player <span class=\"player2\">2</span> Wins';\n            break;\n        case players.tie:\n          gameLogic.status.innerText = 'tie';\n    }\n    gameLogic.status.classList.remove('hide');\n  },\n  refresh: function(index) {\n    gameBoard.board[index] = players.turn;\n  },\n  resetButton: document.querySelector('#reset'),\n  resetBoard: function () {\n    gameBoard.board = ['', '', '', '', '', '', '', '', ''];\n      gameLogic.playing = true;\n      gameLogic.status.classList.add('hide');\n\n      if (players.turn === 'O') {\n          gameLogic.endTurn();\n      }\n\n      gameBoard.tiles.forEach(tile => {\n          tile.innerText = '';\n          tile.classList.remove('player1');\n          tile.classList.remove('player2');\n      });\n  }\n}\n\nconst listener = (() => {\n  gameBoard.tiles.forEach( (tile, index) => {\n    tile.addEventListener('click', () => gameLogic.makeMove(tile, index));\n  })\n  gameLogic.resetButton.addEventListener('click', gameLogic.resetBoard);\n})();"],"file":"game.dev.js"}