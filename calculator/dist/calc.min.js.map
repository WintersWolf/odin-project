{"version":3,"sources":["calc.js"],"names":["Calculator","prevOpText","currOpText","_classCallCheck","this","clear","currOperand","prevOperand","operation","undefined","toString","slice","number","includes","calculation","prev","parseFloat","current","isNaN","integerDisplay","stringNumber","integerDigits","split","decimalDigits","toLocaleString","maximumFractionDigits","innerText","concat","getNumber","numBtns","opBtns","equalsBtn","querySelector","delBtn","document","allClear","calculator","forEach","button","addEventListener","refresh","chooseOperation","calculate","event","key","match","preventDefault","appendNumber","querySelectorAll"],"mappings":"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","file":"calc.min.js","sourcesContent":["/* Calculator project for Project Odin */\n\nclass Calculator {\n  constructor(prevOpText, currOpText) {\n    this.prevOpText = prevOpText\n    this.currOpText = currOpText\n    this.clear()\n  }\n  /* reset the calculator text display */\n  clear() {\n    this.currOperand = ''\n    this.prevOperand = ''\n    this.operation = undefined\n  }\n  /* delete last operand entered */\n  delete() {\n    this.currOperand = this.currOperand.toString().slice(0, -1)\n  }\n  /* add number to calculation */\n  appendNumber(number) {\n    if (number === '.' && this.currOperand.includes('.')) return\n    this.currOperand = this.currOperand.toString() + number.toString()\n  }\n  /* choose an operator for calculation */\n  chooseOperation(operation) {\n    if (this.currOperand === '') return\n    if (this.prevOperand !== '') {\n      this.calculate()\n    }\n    this.operation = operation\n    this.prevOperand = this.currOperand\n    this.currOperand = ''\n  }\n  /* run the calculation of currently entered numbers and operations */\n  calculate() {\n    let calculation\n    const prev = parseFloat(this.prevOperand)\n    const current = parseFloat(this.currOperand)\n    if (isNaN(prev) || isNaN(current)) return\n    switch (this.operation) {\n      case '+':\n        calculation = prev + current\n        break\n      case '-':\n        calculation = prev - current\n        break\n      case '*':\n        calculation = prev * current\n        break\n      case 'รท':\n        calculation = prev / current\n        break\n      default:\n        return\n    }\n    this.currOperand = calculation\n    this.operation = undefined\n    this.prevOperand = ''\n  }\n  /* format numbers to display correctly */\n  getNumber(number) {\n    const stringNumber = number.toString()\n    const integerDigits = parseFloat(stringNumber.split('.')[0])\n    const decimalDigits = stringNumber.split('.')[1]\n    let integerDisplay\n    if (isNaN(integerDigits)) {\n      integerDisplay = ''\n    } else {\n      integerDisplay = integerDigits.toLocaleString('en', { maximumFractionDigits: 0 })\n    }\n    if (decimalDigits != null) {\n      return `${integerDisplay}.${decimalDigits}`\n    } else {\n      return integerDisplay\n    }\n  }\n  /* ensure the calculator screen text is updated */\n  refresh() {\n    this.currOpText.innerText =\n      this.getNumber(this.currOperand)\n    if (this.operation != null) {\n      this.prevOpText.innerText =\n        `${this.getNumber(this.prevOperand)} ${this.operation}`\n    } else {\n      this.prevOpText.innerText = ''\n    }\n  }\n}\n\n/* take input from the calculator buttons */\nconst numBtns = document.querySelectorAll('[data-num]')\nconst opBtns = document.querySelectorAll('[data-op')\nconst equalsBtn = document.querySelector('[data-equals]')\nconst delBtn = document.querySelector('[data-del]')\nconst allClear = document.querySelector('[data-all-clear]')\nconst prevOpText = document.querySelector('[data-prev-op]')\nconst currOpText = document.querySelector('[data-curr-op]')\n\nconst calculator = new Calculator(prevOpText, currOpText)\n\nnumBtns.forEach(button => {\n  button.addEventListener('click', () => {\n    calculator.appendNumber(button.innerText)\n    calculator.refresh()\n  })\n})\n\nopBtns.forEach(button => {\n  button.addEventListener('click', () => {\n    calculator.chooseOperation(button.innerText)\n    calculator.refresh()\n  })\n})\n\nequalsBtn.addEventListener('click', button => {\n  calculator.calculate()\n  calculator.refresh()\n})\n\nallClear.addEventListener('click', button => {\n  calculator.clear()\n  calculator.refresh()\n})\n\ndelBtn.addEventListener('click', button => {\n  calculator.delete()\n  calculator.refresh()\n})\n\ndocument.addEventListener('keydown', function (event) {\n  let patternForNumbers = /[0-9]/g;\n  let patternForOperators = /[+\\-*\\/]/g\n  if (event.key.match(patternForNumbers)) {\n    event.preventDefault();\n    calculator.appendNumber(event.key)\n    calculator.refresh()\n  }\n  if (event.key === '.') {\n    event.preventDefault();\n    calculator.appendNumber(event.key)\n    calculator.refresh()\n  }\n  if (event.key.match(patternForOperators)) {\n    event.preventDefault();\n    calculator.chooseOperation(event.key)\n    calculator.refresh()\n  }\n  if (event.key === 'Enter' || event.key === '=') {\n    event.preventDefault();\n    calculator.calculate()\n    calculator.refresh()\n  }\n  if (event.key === \"Backspace\") {\n    event.preventDefault();\n    calculator.delete()\n    calculator.refresh()\n  }\n  if (event.key == 'Delete') {\n    event.preventDefault();\n    calculator.clear()\n    calculator.refresh()\n  }\n\n});"]}